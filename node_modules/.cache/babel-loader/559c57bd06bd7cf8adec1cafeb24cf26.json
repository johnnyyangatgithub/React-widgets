{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/react-widgets/src/components/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = _ref => {\n  _s();\n\n  let {\n    options,\n    selected,\n    onSelectedChange\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    document.body.addEventListener('click'); //Clean up function\n\n    return () => {};\n  }, []);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => {\n        onSelectedChange(option);\n      },\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select a color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `menu ${open ? 'visible transition' : ''}`,\n          children: renderedOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"wl9VvfhnMVWQ+kCekFjcRPEi3/0=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/johnny/react-widgets/src/components/Dropdown.js"],"names":["React","useState","useEffect","useRef","Dropdown","options","selected","onSelectedChange","open","setOpen","ref","document","body","addEventListener","renderedOptions","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,MAAMC,QAAQ,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAA4C;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EADY,CAGZ;;AACA,WAAO,MAAM,CAEZ,CAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,QAAMC,eAAe,GAAGT,OAAO,CAACU,GAAR,CAAaC,MAAD,IAAY;AAC5C,QAAIA,MAAM,CAACC,KAAP,KAAiBX,QAAQ,CAACW,KAA9B,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,wBACI;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,OAAO,EAAE,MAAM;AAAEV,QAAAA,gBAAgB,CAACS,MAAD,CAAhB;AAA0B,OAH/C;AAAA,gBAKKA,MAAM,CAACE;AALZ,OACSF,MAAM,CAACC,KADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAbuB,CAAxB;AAeA,sBACI;AAAK,IAAA,GAAG,EAAEP,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAD1B;AAEI,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAFrE;AAAA,gCAII;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF,QAAQ,CAACY;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAK,UAAA,SAAS,EAAG,QAAOV,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA,oBAA6DM;AAA7D;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3CD;;GAAMV,Q;;KAAAA,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n\n    useEffect(() => {\n        document.body.addEventListener('click',);\n\n        //Clean up function\n        return () => {\n\n        };\n    }, []);\n\n    const renderedOptions = options.map((option) => {\n        if (option.value === selected.value) {\n            return null;\n        }\n        return (\n            <div\n                key={option.value}\n                className='item'\n                onClick={() => { onSelectedChange(option) }}\n            >\n                {option.label}\n            </div>\n        );\n    });\n\n    return (\n        <div ref={ref} className='ui form'>\n            <div className='field'>\n                <label className='label'>Select a color</label>\n                <div\n                    onClick={() => setOpen(!open)}\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n                >\n                    <i className='dropdown icon'></i>\n                    <div className='text'>{selected.label}</div>\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>{renderedOptions}</div>\n                </div>\n            </div>\n        </div >\n    );\n};\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}