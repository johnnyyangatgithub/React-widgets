{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; //Ternary expession to decide which children widgets should we display\n\nconst Route = _ref => {\n  _s();\n\n  let {\n    path,\n    children\n  } = _ref;\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n  useEffect(() => {\n    //Create a call back function is only for remove it easily later on RETURN syntax\n    const onLocationChange = () => {\n      console.log('Location change');\n    };\n\n    window.addEventListener('popstate', onLocationChange);\n    return () => {\n      window.removeEventListener('popstate', onLocationChange);\n    };\n  }, []);\n  return window.location.pathname === path ? children : null;\n};\n\n_s(Route, \"cTW2cqj/hmHGzdDpGoEziN+i5CA=\");\n\n_c = Route;\nexport default Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/johnny/react-widgets/src/components/Route.js"],"names":["useEffect","useState","Route","path","children","currentPath","setCurrentPath","window","location","pathname","onLocationChange","console","log","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,KAAK,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAuB;AAElC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAACM,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAA9C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMU,gBAAgB,GAAG,MAAM;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KAFD;;AAGAL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,UAAxB,EAAoCH,gBAApC;AAEA,WAAO,MAAM;AACTH,MAAAA,MAAM,CAACO,mBAAP,CAA2B,UAA3B,EAAuCJ,gBAAvC;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOH,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6BN,IAA7B,GACDC,QADC,GAED,IAFN;AAGH,CAnBD;;GAAMF,K;;KAAAA,K;AAqBN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\n//Ternary expession to decide which children widgets should we display\nconst Route = ({ path, children }) => {\n\n    const [currentPath, setCurrentPath] = useState(window.location.pathname);\n\n    useEffect(() => {\n        //Create a call back function is only for remove it easily later on RETURN syntax\n        const onLocationChange = () => {\n            console.log('Location change');\n        };\n        window.addEventListener('popstate', onLocationChange);\n\n        return () => {\n            window.removeEventListener('popstate', onLocationChange);\n        };\n    }, []);\n\n    return window.location.pathname === path\n        ? children\n        : null;\n};\n\nexport default Route;"]},"metadata":{},"sourceType":"module"}